/*

Бульбашковий пошук (Bubble Sort) є алгоритмом сортування, який працює шляхом послідовного порівняння сусідніх елементів масиву та обміну їх місцями у разі необхідності. В кожній ітерації алгоритм порівнює два сусідні елементи та, якщо вони не знаходяться у правильному порядку, то міняє їх місцями. Цей процес продовжується до тих пір, поки не буде відсортований весь масив.

У даному коді функція bubbleSort сортує масив arr методом бульбашкового пошуку. У першому циклі for виконується перебір елементів масиву. У другому циклі for виконується порівняння сусідніх елементів, та, якщо потрібно, вони міняються місцями. Після кожного проходу другого циклу лічильник count збільшується на одиницю. Після завершення роботи функції, вона повертає відсортований масив.

У даному випадку на етапі сортування перевіряється кожна пара елементів, що призводить до порівняння дуже багато разів, навіть якщо масив вже відсортований. Це робить бульбашковий пошук неефективним алгоритмом для сортування великих масивів. Тому, для більш ефективного сортування, можна використовувати інші алгоритми сортування, такі як quicksort або mergesort.

*/

const arr = [
	6, 7, 3, 2, 6, 4, 8, 1, 2, 3, 7, 6, 5, 4, 0, -5, 1, 3, 6, 4, 1, 9, 8, 3, 5, 4,
	-36, 7, 1, 2, 6, 5, 4, 3, 2, 0, 9,
];
let count = 0;
function bubbleSort(array) {
	count = 0;
	for (let i = 0; i < array.length; i++) {
		for (let j = 0; j < array.length; j++) {
			if (array[j + 1] < array[j]) {
				let temp = array[j];
				array[j] = array[j + 1];
				array[j + 1] = temp;
			}
		}
		count++;
	}
	return array;
}
console.log('length = ', arr.length);
console.log(bubbleSort(arr));
console.log('count= ', count);
